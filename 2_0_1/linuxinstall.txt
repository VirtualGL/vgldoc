* Configuring a Linux Machine as a VirtualGL Server

** Granting Access to the Server's X Display

VirtualGL requires access to the server's 3D graphics card so that it can
create off-screen pixel buffers (Pbuffers) and redirect the 3D rendering
from applications into these Pbuffers.  Unfortunately, accessing a 3D
graphics card on Linux currently requires going through an X server.  So the
only way to share the server’s 3D graphics card among multiple users is to
grant those users access to the X server that is running on the 3D graphics
card.

It is important to understand the security risks associated with this.  Once
X display access is granted to a user, there is nothing that would prevent
that user from logging keystrokes or reading back images from the X display.
Using ''xauth'', one can obtain “untrusted” X authentication keys which prevent
such exploits, but unfortunately, those untrusted keys also disallow access to
the 3D hardware.  So it is necessary to grant full trusted X access to any
users that will need to run VirtualGL.  Unless you fully trust the users to
whom you are granting this access, you should avoid logging in locally to the
server’s X display as root unless absolutely necessary.

This section will explain how to configure a VirtualGL server such that select
users can run VirtualGL, even if the server is sitting at the login prompt.
The basic idea is to call a script (''vglgenkey'') from the display manager's
startup script.  ''vglgenkey'' invokes ''xauth'' to generate an authorization
key for the server's X display, and it stores this key under
''/etc/opt/VirtualGL''.  The VirtualGL launcher script (''vglrun'') then
attempts to read this key and merge it into the user's ''.Xauthority'' file,
thus granting the user access to the server's X display.  Therefore, you can
control who has access to the server's X display simply by controlling who has
read access to the ''/etc/opt/VirtualGL'' directory.

If you prefer, you can also grant access to every authenticated user on the
server by replacing the references to ''vglgenkey'' below with
''xhost +localhost''.

	#. If the server machine is configured to boot into runlevel 5 (graphical
		login), then temporarily shut down its X server by issuing

		#Verb <<---
		init 3
		---

		as root

	#. Log in as root from the text console.

	#. Create a new group called ''vglusers'' and add any users that need to
		run VirtualGL to this group.

	#. Create a new directory ''/etc/opt/VirtualGL'' and make it readable by the
		''vglusers'' group.  For example:
		{nl}
		#Verb: <<---
		mkdir -p /etc/opt/VirtualGL
		chgrp vglusers /etc/opt/VirtualGL
		chmod 750 /etc/opt/VirtualGL
		---

	#. If the server machine is configured to boot into runlevel 3 (text login),
		then configure it to boot into a graphical login by changing the first line
		of ''/etc/inittab'' from{nl}
		{nl}
		''id:3:initdefault:''{nl}
		{nl}
		to{nl}
		{nl}
		''id:5:initdefault:''

	#. Add

		#Verb <<---
		vglgenkey
		---

		at the top of the display manager's startup script.  The location of
		this script varies depending on the particular Linux distribution and
		display manager being used.  The following table lists some common
		locations for this file:
		{nl}{nl}
		|| || xdm or kdm || gdm{nl}{,(default display manager on most Linux systems)} ||
		| RedHat 7/8/9{nl}Enterprise Linux 2.1/3 \
		| ''/etc/X11/xdm/Xsetup_0''{nl} \
			{nl} \
			(replace "0" with the display number of the X server you are \
			configuring) \
		| ''/etc/X11/gdm/Init/Default''{nl} \
			{nl} \
			(usually this is just symlinked to ''/etc/X11/xdm/Xsetup_0'') \
		|
		| Enterprise Linux 4{nl}Fedora 1-4 \
		| ''/etc/X11/xdm/Xsetup_0''{nl} \
			{nl} \
			(replace "0" with the display number of the X server you are \
			configuring) \
		| ''/etc/X11/gdm/Init/:0''{nl} \
			{nl} \
			(usually this is just symlinked to ''/etc/X11/xdm/Xsetup_0'') \
		|
		| Enterprise Linux 5{nl}Fedora 5 & 6 \
		| ''/etc/X11/xdm/Xsetup_0''{nl} \
			{nl} \
			(replace "0" with the display number of the X server you are \
			configuring) \
		| ''/etc/gdm/Init/Default''{nl} \
		|
		| SuSE/United Linux \
		| ''/etc/X11/xdm/Xsetup'' \
		| ''/etc/opt/gnome/gdm/Init/Default'' \
		|
		#OPT: hiCol=first, align=center

	#. If the server is running gdm (the factory default on most Linux systems),
		then you'll need to set up gdm to allow TCP connections to the X server.
		To do this, edit the ''gdm.conf'' file and add the following line under the
		''[security]'' section (or change it if it already exists):

		#Verb <<---
		DisallowTCP=false
		---

		See the table below for the location of gdm.conf on various systems.

	#. Unless you know that you absolutely need it, disable the XTEST extension.
		Disabling XTEST will not prevent a user from logging keystrokes or reading
		images from the X display, but it will prevent them from inserting
		key and mouse events and thus hijacking a local X session.{nl}
		{nl}
		Disabling XTEST is accomplished by passing an argument of ''-tst'' on the
		command line used to launch the X server.  The location of this command
		line varies depending on the particular Linux distribution and display
		manager being used.   The following table lists some common locations:{nl}
		{nl}
		|| || xdm || gdm{nl}{,(default on most Linux systems)} || kdm ||
		| RedHat 7/8/9{nl}Enterprise Linux 2.1/3/4{nl}Fedora 1-4 \
		| ''/etc/X11/xdm/Xservers'' \
		| ''/etc/X11/gdm/gdm.conf'' \
		| ''/etc/X11/xdm/Xservers'' \
		|
		| Enterprise Linux 5{nl}Fedora 5 & 6 \
		| ''/etc/X11/xdm/Xservers'' \
		| ''/etc/gdm/custom.conf'' \
		| ''/etc/X11/xdm/Xservers'' \
		|
		| SuSE/United Linux \
		| ''/etc/X11/xdm/Xservers'' \
		| ''/etc/opt/gnome/gdm/gdm.conf'' \
		| ''/etc/opt/kde3/share/config/kdm/Xservers'' \
		|
		#OPT: hiCol=first, align=center
		{nl}
		For xdm-style configuration files, add ''-tst'' to the line corresponding to
		the display number you are configuring.  For example:
		{nl}
		#Verb <<---
		:0 local /usr/X11R6/bin/X :0 vt07 -tst
		---
	
		For gdm-style configuration files, add ''-tst'' to all lines that appear to
		be X server command lines.  For example:
		{nl}
		#Verb <<---
		StandardXServer=/usr/X11R6/bin/X -tst
		---
		#Verb <<---
		[server-Standard]
		command=/usr/X11R6/bin/X -tst -audit 0
		---
		#Verb <<---
		[server-Terminal]
		command=/usr/X11R6/bin/X -tst -audit 0 -terminate
		---
		#Verb <<---
		[server-Chooser]
		command=/usr/X11R6/bin/X -tst -audit 0
		---

	#. Restart the X server by issuing
		#Verb <<---
		init 5
		---
		as root.

	#. To check your work, log out of the server, log back in via. SSh, and
		run
		#Verb <<---
		xauth merge /etc/opt/VirtualGL/vgl_xauth_key
		xdpyinfo -display :0
		---
		In particular, make sure that XTEST doesn't show up in the list of
		extensions if you disabled it above.

** Device permissions

If you are installing VirtualGL on a server which is running version 1.0-71xx
or earlier of the NVidia accelerated GLX drivers, follow the instructions in
''/usr/share/doc/NVIDIA_GLX-1.0/README'' regarding setting the appropriate
permissions for ''/dev/nvidia*''.  This is not necessary with more recent
versions of the driver.  ''cat /proc/driver/nvidia/version'' to determine
which version of the NVidia driver is installed on your system.
