* GLP: Using VirtualGL Without an X Server on the Server Machine
{anchor: GLP_Usage}

Sun Microsystems has developed an extension to OpenGL called GLP which allows
an application to directly access the rendering capabilities of a 3D graphics
card even if there is no X server running on the card.  Apart from greatly
simplifying the process of setting up VirtualGL on a server, GLP also greatly
improves the overall security of VirtualGL servers, since it is no longer
necessary to grant every user access to display :0.  In addition, GLP makes it
quite simple to assign VirtualGL jobs to any graphics pipe in a multi-pipe
system.

Version 2.0 of VirtualGL for Sparc/Solaris can use GLP if it is available.
Currently, GLP is available only in
[[http://www.sun.com/software/graphics/opengl/][Sun OpenGL]] 1.5 for
Sparc/Solaris.

See http://www.opengl.org/about/arb/meeting_notes/notes/glP_presentation.pdf
for more details on GLP.

If GLP is supported on your application server, it can be enabled by passing an
argument of ''-d glp'' to ''vglrun'', e.g.:

#Verb <<---
/opt/SUNWvgl/bin/vglrun -d glp {application_executable_or_script} {arguments}
---

This will tell the VirtualGL faker to enable GLP mode and select the first
available GLP device.  You can also set the ''VGL_DISPLAY'' environment
variable to ''glp'' to achieve the same effect:

#Verb <<---
export VGL_DISPLAY=glp
/opt/SUNWvgl/bin/vglrun {application_executable_or_script} {arguments}
---

Additionally, you can specify a specific GLP device to use for rendering:

#Verb <<---
export VGL_DISPLAY=/dev/fbs/jfb0
/opt/SUNWvgl/bin/vglrun {application_executable_or_script} {arguments}
---
