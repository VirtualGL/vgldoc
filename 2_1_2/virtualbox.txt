* Using VirtualGL with VirtualBox

VirtualBox is an enterprise-class, open source virtualization solution
provided by Sun Microsystems.  With the release of VirtualBox 2.1.0,
experimental support was added for hardware-accelerated OpenGL in 32-bit
Windows guests running on Windows, MacIntel, Linux, and Solaris/x86 hosts.
3D acceleration in VirtualBox is accomplished by installing a special driver in
the guest which uses a subset of Chromium to transmit OpenGL calls through a
local connection to the VirtualBox process running on the host.  When used in
conjunction with VirtualGL, this solution provides a means of displaying
Windows 3D applications remotely.

To use VirtualGL with VirtualBox, perform the following procedure:

	#. Launch VirtualBox and use the VirtualBox GUI to create and test your
		virtual machine.

	#. Follow the procedures outlined in the VirtualBox User's Manual to enable
		3D acceleration on the virtual machine.  Verify that 3D acceleration works
		__without__ VirtualGL before adding VirtualGL to the mix.

	#. Follow the procedure described in {ref prefix="Section ": setuid_linux} to
		make ''librrfaker.so'' a setuid executable (Linux) or to add the faker
		directory to the list of secure paths (Solaris).

	#. ''vglrun VirtualBox -startvm ''__''{VM name or UUID}''__

*** NOTES
#OPT: noList! plain!

	* VirtualBox 2.1.0 also works with prior versions of VirtualGL (2.0 and
		later), but it is necessary to add an argument of ''-dl'' to ''vglrun''
		when using VirtualBox with these versions of VirtualGL.  It is also
		necessary to perform step 3 above on ''libdlfaker.so'' as well as
		''librrfaker.so''.

	* You might want to temporarily enable profiling (add an argument of ''+pr''
		to ''vglrun'' above) in order to verify that VirtualGL is loaded and
		working.

	* It is necessary to start the virtual machine directly as described above.
		Simply executing ''vglrun VirtualBox'' and using the GUI to launch the VM
		does not work.  VirtualBox forks a separate process for each VM, and the
		value of the ''LD_PRELOAD'' environment variable from ''vglrun'' does not
		get propagated to the VM process unless you start it directly.

	* VirtualBox sends mainly uncompressed image updates to the X display, so
		the 2D elements of the virtual machine display will not perform well
		over a remote X11 connection unless a
		[[#Direct_X11_Connection][direct X11 connection]] (''vglconnect -x'') is
		used with gigabit Ethernet (or faster.)  For 100 Megabit and slower
		networks, using TurboVNC is recommended when remotely displaying VirtualBox
		using VirtualGL.
